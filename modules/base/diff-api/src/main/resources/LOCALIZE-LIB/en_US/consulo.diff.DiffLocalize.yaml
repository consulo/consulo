action.presentation.diff.accept.text:
    text: Accept
action.presentation.diff.append.text:
    text: Append
action.presentation.diff.revert.text:
    text: Revert
all.changes.processed.dialog.title:
    text: All Changes Processed
apply.partially.resolved.merge.dialog.title:
    text: Apply Changes
apply.patch.all.changes.processed.message.text:
    text: All hunks have been processed.<br><a href="">Save changes and finish resolve</a>
apply.patch.partially.resolved.changes.confirmation.message:
    text: |-
        There {0, choice, 1#is one hunk|2#are {0, number} hunks} left unprocessed.
        Save changes and finish resolve?
apply.somehow.status.message.all.applied:
    text: All hunks resolved
apply.somehow.status.message.already.applied:
    text: '{0, number} {0, choice, 1#hunk is|2#hunks are} already applied'
apply.somehow.status.message.cant.apply:
    text: Cannot apply {0, number} {0, choice, 1#hunk|2#hunks}
apply.somehow.status.message.cant.apply.some:
    text: Cannot apply {0, number} of {1, number} hunks
binary.file.viewer:
    text: Binary file viewer
binary.files.are.different.message:
    text: Binary files are different
binary.files.are.identical.message:
    text: Binary files are identical
cancel.visual.merge.dialog.title:
    text: Cancel Visual Merge
cannot.compare.error:
    text: Diff manager cannot compare ''{0}'' and ''{1}''
cannot.create.diff.error:
    text: 'Cannot create diff element from: {0}'
cannot.file.file.error:
    text: 'Cannot find file: {0}'
cant.launch.diff.tool.error.message:
    text: Can't Launch Diff Tool
collapse.unchanged.fragments:
    text: Collapse Unchanged Fragments
compare.file.vs.file.dialog.title:
    text: '{0} vs {1}'
diff.acton.highlight.mode.action.by.line:
    text: By line
diff.acton.highlight.mode.action.by.word:
    text: By word
diff.acton.highlight.mode.action.name:
    text: 'Highlight:'
diff.acton.highlight.mode.action.no.highlighting:
    text: Do not highlight
diff.acton.ignore.whitespace.policy.all:
    text: All
diff.acton.ignore.whitespace.policy.do.not.ignore:
    text: Do not ignore
diff.acton.ignore.whitespace.policy.leading.and.trailing:
    text: Leading and trailing
diff.all.differences.ignored.text:
    text: Differences ignored
diff.application.usage.parameters.and.description:
    text: 'Usage: {0} diff <left file> <right file> [<base file>]'
diff.can.not.show:
    text: Can not show diff
diff.can.not.show.unknown:
    text: Can not show diff for unknown file type
diff.clipboard.vs.editor.dialog.title:
    text: Clipboard vs Editor
diff.clipboard.vs.file.dialog.title:
    text: Clipboard vs {0}
diff.clipboard.vs.value.dialog.title:
    text: Clipboard vs Selected Value
diff.compare.element.type.with.editor.action.name:
    text: Compare File with Editor
diff.content.clipboard.content.title:
    text: Clipboard
diff.content.editor.content.title:
    text: Editor
diff.content.read.only.content.title.suffix:
    text: (Read-only)
diff.content.selected.value:
    text: Selected Value
diff.content.selection.from.editor.content.title:
    text: Selection from Editor
diff.content.selection.from.file.content.title:
    text: Selection from {0}
diff.contents.are.identical.message.text:
    text: Contents are identical
diff.contents.have.differences.only.in.charset.and.line.separators.message.text:
    text: Contents have differences only in line separators and encoding
diff.contents.have.differences.only.in.charset.message.text:
    text: Contents have differences only in encoding
diff.contents.have.differences.only.in.line.separators.message.text:
    text: Contents have differences only in line separators
diff.contents.have.differences.only.in.line.separators.or.whitespaces:
    text: Contents have differences only in line separators or whitespaces
diff.count.differences.status.text:
    text: '{0, choice, 0#no differences|1#1 difference|2#{0, number} differences}'
diff.dialog.select.change.action.description:
    text: Select changed text in this version and corresponding in other
diff.dialog.select.change.action.name:
    text: Select Change
diff.element.qualified.name.vs.editor.dialog.title:
    text: '{0} vs Editor'
diff.element.qualified.name.vs.element.qualified.name.dialog.title:
    text: '{0} vs {1}'
diff.element.qualified.name.vs.file.dialog.title:
    text: '{0} vs {1}'
diff.file.editor.name:
    text: Diff
diff.highlighting.disabled.text:
    text: Differences highlighting is off
diff.options.diff.options.border:
    text: Diff Options
diff.options.use.external.merge.tool.for.files.checkbox:
    text: 'Use external merge tool:'
diff.options.use.external.tool.for.files.checkbox:
    text: 'Use external tool to compare files/folders:'
diff.panel.combo.box.action.not.available.action.name:
    text: <Not available>
diff.type.changed.name:
    text: Changed
diff.type.conflict.name:
    text: Conflict
diff.type.deleted.name:
    text: Deleted
diff.type.inserted.name:
    text: Inserted
diff.type.none.name:
    text: None
directory.viewer:
    text: Directory viewer
editor.settings:
    text: Settings
error.message.cannot.show.diff:
    text: Cannot show diff
error.viewer:
    text: Error viewer
files.are.different.dialog.title:
    text: Files Are Different
files.are.identical.dialog.title:
    text: Files Are Identical
filetype.diff.description:
    text: Diff
highlighting.level:
    text: Highlighting Level
ignore.whitespace.acton.name:
    text: 'Ignore whitespace:'
label.default.diff.editor.tab.name:
    text: Diff
merge.all.changes.have.processed.save.and.finish.confirmation.text:
    text: |-
        All changes have been processed.
        Would you like to save changes and finish merging?
merge.all.changes.processed.message.text:
    text: All changes have been processed.<br><a href="">Save changes and finish merging</a>
merge.application.usage.parameters.and.description:
    text: 'Usage: {0} merge <left file> <right file> [<base file>] <output file>'
merge.color.options.background.color.label:
    text: Important
merge.color.options.dialog.title:
    text: Merge Color Options
merge.color.options.ignored.color.label:
    text: Ignored
merge.color.options.stripe.mark.color.label:
    text: '&Stripe mark color:'
merge.continue.button:
    text: '&Continue'
merge.dialog.accept.change.command:
    text: Accept change
merge.dialog.all.conflicts.resolved.message.text:
    text: All conflicts resolved
merge.dialog.append.change.action.name:
    text: Apply selected change side
merge.dialog.apply.all.non.conflicting.changes.action.name:
    text: Apply all non-conflicting changes
merge.dialog.apply.change.action.name:
    text: Apply change
merge.dialog.apply.left.non.conflicting.changes.action.name:
    text: Apply non-conflicting changes from left side
merge.dialog.apply.non.conflicted.changes.command:
    text: Apply non conflicted changes
merge.dialog.apply.partially.resolved.changes.confirmation.message:
    text: |-
        There are {0, choice, 0#|1#one change|2#{0, number} changes}{0, choice, 0#|1#'{1, choice, 0#|1# and }'}{1, choice, 0#|1#one conflict|2#{1, number} conflicts} left unprocessed.
        Are you sure you want to save changes and finish merging?
merge.dialog.apply.right.non.conflicting.changes.action.name:
    text: Apply non-conflicting changes from right side
merge.dialog.cannot.load.file.error.message:
    text: 'Cannot load file: {0}'
merge.dialog.exit.without.applying.changes.confirmation.message:
    text: Are you sure you want to exit without applying changes?
merge.dialog.ignore.change.action.name:
    text: Ignore change
merge.dialog.ignore.change.command:
    text: Ignore change
merge.dialog.resolve.change.action.name:
    text: Resolve
merge.dialog.resolve.conflict.command:
    text: Resolve conflict
merge.dialog.resolve.side.with.discard.message:
    text: Are you sure you want to discard your changes and accept {0, choice, 0#left|1#right} side?
merge.dialog.resolve.side.with.discard.title:
    text: Accept Changes
merge.editor.insert.operation.name:
    text: Insert
merge.editor.remove.operation.name:
    text: Remove
merge.editor.replace.operation.name:
    text: Replace
merge.files.dialog.title:
    text: Merge
merge.init.merge.content.command.name:
    text: initMergeContent
merge.partial.diff.action.name:
    text: Compare left and right panel contents
merge.partial.diff.action.name.0.1:
    text: Compare left and middle panel contents
merge.partial.diff.action.name.1.2:
    text: Compare middle and right panel contents
merge.save.and.finish.button:
    text: Save and &Finish
merge.statistics.message:
    text: '{0, choice, 0#No changes|1#One change|2#{0, number} changes}. {1, choice, 0#No conflicts|1#One conflict|2#{0, number} conflicts}'
message.do.in.merge.command:
    text: '{0} in merge'
message.init.merge.content.command:
    text: Init merge content
message.replace.change.command:
    text: Replace change
message.use.selected.changes.command:
    text: '{0} selected changes'
no.differences.dialog.title:
    text: No Differences
option.highlighting.level.inspections:
    text: Inspections
option.highlighting.level.none:
    text: None
option.highlighting.level.syntax:
    text: Syntax
option.highlighting.policy.lines:
    text: Highlight lines
option.highlighting.policy.none:
    text: Do not highlight
option.highlighting.policy.split:
    text: Highlight split changes
option.highlighting.policy.symbols:
    text: Highlight characters
option.highlighting.policy.words:
    text: Highlight words
option.ignore.policy.none:
    text: Do not ignore
option.ignore.policy.trim:
    text: Trim whitespaces
option.ignore.policy.whitespaces:
    text: Ignore whitespaces
option.ignore.policy.whitespaces.empty.lines:
    text: Ignore whitespaces and empty lines
option.inherit.ignored.color:
    text: Inherit ignored color
save.merge.result.command.name:
    text: Merge
select.external.diff.program.dialog.title:
    text: Select External Diff Program
select.external.merge.program.dialog.title:
    text: Select External Merge Program
show.diff.anyway.dialog.message:
    text: Show diff anyway?
side.by.side.viewer:
    text: Side-by-side viewer
synchronize.document.and.its.fragment:
    text: Synchronize document and its fragment
synchronize.scrolling:
    text: Synchronize Scrolling
unified.viewer:
    text: Unified viewer
unknown.file.type.error:
    text: 'Unknown file type: {0}'
