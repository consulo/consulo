action.analysis.noun:
    text: Analysis
action.analyze.verb:
    text: Analyze
action.analyzing.cyclic.dependencies.in.scope:
    text: Cyclic Dependencies of {0}
action.backward.dependency.analysis:
    text: Backward Dependency Analysis
action.close.dependency.description:
    text: Close Dependency Viewer
action.close.modules.dependencies.description:
    text: Close Modules Dependencies Viewer
action.cyclic.dependency.title:
    text: Cyclic Dependency Analysis
action.edit.rules:
    text: Edit Rules
action.edit.rules.description:
    text: Edit Dependency Rules
action.flatten.packages:
    text: Flatten Packages
action.forward.dependency.analysis:
    text: Dependency Analysis
action.group.by.scope.type:
    text: Group by Scope Type
action.group.by.scope.type.description:
    text: Group by Scope Type (production, test, libraries)
action.module.dependencies.direction:
    text: Dependencies Direction
action.rerun.dependency:
    text: Rerun Dependency Analysis
action.select.in.left.tree:
    text: Select in Left Tree
action.select.in.left.tree.description:
    text: Select in left tree (to browse dependencies from)
action.show.files:
    text: Show Files
action.show.files.description:
    text: Show/Hide Files
action.show.illegals.only:
    text: Show Illegals Only
action.show.illegals.only.description:
    text: Show only files that have illegal dependencies
action.show.modules:
    text: Show Modules
action.show.modules.description:
    text: Show/Hide Modules
analysis.scope.title:
    text: '{0} scope'
analyzing.project:
    text: Analyzing Project
backward.dependencies.progress.text:
    text: Analyzing Backward Dependencies
backward.dependencies.toolwindow.title:
    text: Backward Dependencies of {0}
backward.dependencies.usage.view.initial.text:
    text: Select where to search in right tree and what to search in left tree.
backward.dependencies.usage.view.root.node.text:
    text: Usages of the left tree scope selection in the right tree scope selection
checking.class.files:
    text: Checking Class Files
cyclic.dependencies.progress.text:
    text: Building dependencies graph
cyclic.dependencies.scope.dialog.module.button:
    text: '{0} &module ''''{1}'''''
cyclic.dependencies.scope.dialog.project.button:
    text: '{0} the whole &project'
cyclic.dependencies.scope.dialog.title:
    text: Specify {0} Scope
cyclic.dependencies.tree.cycle.node.text:
    text: cycle
cyclic.dependencies.usage.view.initial.text:
    text: Select package to analyze from the left tree
cyclic.dependencies.usage.view.root.node.text:
    text: Usages of package ''{0}'' in package ''{1}''
dependencies.libraries.node.text:
    text: Libraries
dependencies.tree.node.default.package.abbreviation:
    text: <default package>
dependency.configurable.allow.table.column1:
    text: Allow usages of
dependency.configurable.allow.table.column2:
    text: only in
dependency.configurable.deny.table.column1:
    text: Deny usages of
dependency.configurable.deny.table.column2:
    text: in
dependency.configurable.display.name:
    text: Dependency Validation
error.packageset.common.expectations:
    text: '(test|lib|src)[modulename] expected before :'
error.packageset.pattern.expectations:
    text: Package pattern expected
error.packageset.position.parsing.error:
    text: '{0} at position {1}'
error.packageset.rparen.expected:
    text: ''')'' expected'
error.packageset.token.expectations:
    text: Unexpected ''{0}''
find.dependencies.progress.text:
    text: 'Searching for usages in: {0}'
forward.dependencies.usage.view.initial.text:
    text: Select where to search in left tree and what to search in right tree.
forward.dependencies.usage.view.root.node.text:
    text: Usages of the right tree scope selection in the left tree scope selection
local.scopes.node.text:
    text: Local Scopes
mark.dependency.illegal.text:
    text: Mark Illegal
module.dependencies.cycle.node.text:
    text: Cycle{0}
module.dependencies.scope.dialog.module.button:
    text: Inspect &module ''{0}''
module.dependencies.scope.dialog.project.button:
    text: Inspect the whole &project
module.dependencies.scope.dialog.title:
    text: Specify Analysis Scope
module.dependencies.toolwindow.title:
    text: '{0}'
no.dependencies.found.message:
    text: No dependencies of {0} on {1} found.
package.dependencies.build.process.title:
    text: Scanning Packages
package.dependencies.build.progress.text:
    text: Scanning packages
package.dependencies.library.node.text:
    text: Library Classes
package.dependencies.node.items.count:
    text: '{0, choice, 1#1 entry|2#{0, number} entries}'
package.dependencies.on.toolwindow.title:
    text: Dependencies of {0} on {1}
package.dependencies.production.node.text:
    text: Production Classes
package.dependencies.progress.text:
    text: Analyzing package dependencies
package.dependencies.progress.title:
    text: Analyzing Dependencies
package.dependencies.test.node.text:
    text: Test Classes
package.dependencies.toolwindow.title:
    text: Dependencies of {0}
predefined.scope.problems.name:
    text: Problems
project.is.out.of.date:
    text: Project Is Out Of Date
recompile.confirmation.message:
    text: "Project class files are out of date. \nDo you want to compile a project before continuing DSM analysis?\nThe refusal to do it might result in incomplete or incorrect data."
scanning.scope.progress.title:
    text: Scanning scope ...
scope.directory:
    text: Directory ''{0}''
scope.display.name.allow.scope:
    text: Allow usages of scope ''{0}'' in scope ''{1}''
scope.display.name.deny.scope:
    text: Deny usages of scope ''{0}'' in scope ''{1}''
scope.file:
    text: File ''{0}''
scope.module.list:
    text: '{1, choice, 1#Module|2#Modules} {0}'
scope.option.analyze.injected.code:
    text: Inspect in&jected code
scope.option.custom:
    text: '&Custom scope'
scope.option.include.test.sources:
    text: Include &test sources
scope.option.module:
    text: Module ''{0}''
scope.option.module.with.mnemonic:
    text: '&Module ''''{0}'''''
scope.option.uncommited.files:
    text: '&Uncommitted files'
scope.option.uncommited.files.all.changelists.choice:
    text: All
scope.option.uncommitted.files:
    text: '&Uncommitted files'
scope.option.uncommitted.files.all.changelists.choice:
    text: All
scope.option.whole.project:
    text: Whole &project
scope.package:
    text: Package {0}
scope.project:
    text: Project ''{0}''
scope.selected.files:
    text: Selected files
scope.virtual.files:
    text: selection
skip.import.statements.checkbox.title:
    text: Skip import statements
specify.analysis.scope:
    text: Specify {0} Scope
status.bar.no.rule.violation.message:
    text: No rules are violated
status.bar.rule.violation.message:
    text: 'The following rule{0, choice, 1# is|2#s are} violated: {1}'
unknown.node.text:
    text: <unknown>
update.module.tree.progress.text:
    text: Process module ''{0}'' cycles
update.module.tree.progress.title:
    text: Update modules tree
usage.view.canceled:
    text: Canceled
